// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  PREMIUM
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  userName    String?
  firstName   String
  lastName    String
  password    String
  address     String?
  phoneNumber Int?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  Recipe      Recipe[]
}

model Recipe {
  id          Int                 @id @default(autoincrement())
  name        String
  coverImage  String              @default("") //ADD default image
  prepTime    Int
  spiciness   Int
  createdAt   DateTime            @default(now())
  updated_at  DateTime            @default(now())
  ingredients RecipeIngredients[]
  categoryId  Int
  category    Category            @relation(fields: [categoryId], references: [id])
  createdBy   Int
  user        User                @relation(fields: [createdBy], references: [id])
  Step        Step[]
  Comment     Comment[]
}

model Step {
  id          Int    @id @default(autoincrement())
  stepNumber  Int
  description String
  recipeId    Int
  recipe      Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model RecipeIngredients {
  id           Int        @id @default(autoincrement())
  quantity     Int
  unit         String
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipeId     Int
  recipe       Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Ingredient {
  id      Int                 @id @default(autoincrement())
  name    String
  icon    String
  recipes RecipeIngredients[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  icon    String
  recipes Recipe[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
}
